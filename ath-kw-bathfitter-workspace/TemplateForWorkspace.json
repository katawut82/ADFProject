{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "ath-kw-bathfitter-workspace"
		},
		"ath-kw-bathfitter-workspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ath-kw-bathfitter-workspace-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:ath-kw-bathfitter-workspace.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ath-kw-bathfitter-workspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://athkwbathfitter.dfs.core.windows.net"
		},
		"athkwbathfitterkv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ath-kw-bathfitter-kv.vault.azure.net/"
		},
		"athkwbathfittersqlserver_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "athkwbathfitterconnectionstring"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_GetDataFromExtToLkp_CRM_Daily')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Source Entity Name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "select s.id,s.EntityName,[IsEnabled],RawLocation,LandingLocation,CopyUsingSPToDB,MergeUsingSPToLKP,COALESCE([ExtractEndTime],'2000-01-01') as ExtractStartTime\n,COALESCE((select ExtractEndTime from [JobConfig].[BatchTime] where IsBatchCompleted = 0), GETUTCDATE()) as ExtractEndTime\nfrom [JobConfig].[SourceDetail] s\nLeft join [JobConfig].[JobLastRun] r\non s.id=r.sourceDetailId\nwhere [IsEnabled] = 1 and [IsRawProcessed] = 1 and [IsLKPProcessed] = 0",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SynapsePool",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Get Source Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source Entity Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source Entity Name').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Make Entry For Job Run Success",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Merge Data from EXT to LKP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_LoadJobRunDetails]",
										"storedProcedureParameters": {
											"Comments": {
												"value": "",
												"type": "String"
											},
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExtractEndtime": {
												"value": {
													"value": "@item().ExtractEndTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"ExtractStartTime": {
												"value": {
													"value": "@item().ExtractStartTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobEndTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobStartTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Success",
												"type": "String"
											},
											"StoredProcedureName": {
												"value": "null",
												"type": "String"
											},
											"Zone": {
												"value": "raw",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Make Entry For Job Run Failure",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Merge Data from EXT to LKP",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_LoadJobRunDetails]",
										"storedProcedureParameters": {
											"Comments": {
												"value": {
													"value": "@activity('Merge Data from EXT to LKP').output.error[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExtractEndtime": {
												"value": {
													"value": "@item().ExtractEndTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"ExtractStartTime": {
												"value": {
													"value": "@item().ExtractStartTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobEndTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobStartTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Failure",
												"type": "String"
											},
											"StoredProcedureName": {
												"value": "null",
												"type": "String"
											},
											"Zone": {
												"value": "raw",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update IsLKPProcessed",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Make Entry For Job Run Success",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_UpdateSourceDetailProcessed]",
										"storedProcedureParameters": {
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Zone": {
												"value": "lkp",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Merge Data from EXT to LKP",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().MergeUsingSPToLKP",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T04:11:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_SynapsePool')]",
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_GetDataFromRawToLanding_CRM_Daily')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Source Entity Name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "select s.id,s.EntityName,[IsEnabled],RawLocation,LandingLocation,CopyUsingSPToDB\nfrom [JobConfig].[SourceDetail] s\nwhere [IsEnabled] = 1 and [IsRawProcessed] = 1",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SynapsePool",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Get Source Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source Entity Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source Entity Name').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Data From Raw To Landing",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_DataLake_AtLocation_Binary",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@item().RawLocation",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DataLake_AtLocation_Binary",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@concat(item().LandingLocation,'/',formatDateTime(utcNow(),'yyyy-MM-dd'),'/',formatDateTime(utcNow(),'HH'),'/',formatDateTime(utcNow(),'mm'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T03:23:36Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_SynapsePool')]",
				"[concat(variables('workspaceId'), '/datasets/DS_DataLake_AtLocation_Binary')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_GetDataFromSourceToRaw_CRM_Daily')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Source Entity Name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderStoredProcedureName": "[JobConfig].[SP_GetLookUpQuerySource]",
								"storedProcedureParameters": {
									"Frequency": {
										"type": "String",
										"value": "D"
									},
									"SourceArea": {
										"type": "String",
										"value": "CRM"
									},
									"SourceName": {
										"type": "String",
										"value": "CRM"
									},
									"SourceType": {
										"type": "String",
										"value": "Sql"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DS_SynapsePool",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Get Source Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Source Entity Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Source Entity Name').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete Data From Raw Location",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_DataLake_DeleteFiles",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@item().RawLocation",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Get Data From Source",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Delete Data From Raw Location",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "@item().sourceQuery",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SQLSERVER_CRM",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DataLake_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@item().RawLocation",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Make Entry For Job Run Success",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data From Source",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_LoadJobRunDetails]",
										"storedProcedureParameters": {
											"Comments": {
												"value": "",
												"type": "String"
											},
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExtractEndtime": {
												"value": {
													"value": "@item().ExtractEndTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"ExtractStartTime": {
												"value": {
													"value": "@item().ExtractStartTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobEndTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobStartTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Success",
												"type": "String"
											},
											"StoredProcedureName": {
												"value": "null",
												"type": "String"
											},
											"Zone": {
												"value": "raw",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Make Entry For Job Run Failure",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data From Source",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_LoadJobRunDetails]",
										"storedProcedureParameters": {
											"Comments": {
												"value": {
													"value": "@activity('Get Data From Source').output.error[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExtractEndtime": {
												"value": {
													"value": "@item().ExtractEndTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"ExtractStartTime": {
												"value": {
													"value": "@item().ExtractStartTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobEndTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"JobStartTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Status": {
												"value": "Failure",
												"type": "String"
											},
											"StoredProcedureName": {
												"value": "null",
												"type": "String"
											},
											"Zone": {
												"value": "raw",
												"type": "String"
											}
										}
									}
								},
								{
									"name": "Update IsRawProcessed",
									"type": "SqlPoolStoredProcedure",
									"dependsOn": [
										{
											"activity": "Make Entry For Job Run Success",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"sqlPool": {
										"referenceName": "athkwbathfittersqlpool",
										"type": "SqlPoolReference"
									},
									"typeProperties": {
										"storedProcedureName": "[JobConfig].[SP_UpdateSourceDetailProcessed]",
										"storedProcedureParameters": {
											"EntityName": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SourceDetailId": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Zone": {
												"value": "raw",
												"type": "String"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-18T06:40:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_SynapsePool')]",
				"[concat(variables('workspaceId'), '/datasets/DS_DataLake_DeleteFiles')]",
				"[concat(variables('workspaceId'), '/datasets/DS_SQLSERVER_CRM')]",
				"[concat(variables('workspaceId'), '/datasets/DS_DataLake_Parquet')]",
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimCampaign')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT DimCampaign",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_DimCampaign]"
						}
					},
					{
						"name": "Load Curated DimCampaign",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT DimCampaign",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimCampaign]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T06:10:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimDate')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Merge SP_Load_Curated_DimDate",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimDate]",
							"storedProcedureParameters": {
								"StartDate": {
									"value": "2015-01-02",
									"type": "String"
								},
								"EndDate": {
									"value": "2025-12-30",
									"type": "String"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-18T04:26:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimEmployee')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT DimEmployee",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_DimEmployee]"
						}
					},
					{
						"name": "Load Curated DimEmployee",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimEmployee]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T06:10:17Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimLeadStatus')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT DimLeadStatus",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_DimLeadStatus]"
						}
					},
					{
						"name": "Load Curated DimLeadStatus",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT DimLeadStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimLeadStatus]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T07:49:53Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimLocation')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT DimLocation",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_DimLocation]"
						}
					},
					{
						"name": "Load Curated DimLocation",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT DimLocation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimLocation]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T06:10:21Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedDimMarketSegment')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT DimMarketSegment",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_DimMarketSegment]"
						}
					},
					{
						"name": "Load Curated DimMarketSegment",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT DimMarketSegment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_DimMarketSegment]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T07:50:00Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_LoadCuratedFactLead')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load INT FactLead",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Int].[SP_Load_INT_FactLead]"
						}
					},
					{
						"name": "Load Curated FactLead",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [
							{
								"activity": "Load INT FactLead",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[Curated].[SP_Load_Curated_FactLead]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T08:35:30Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_OneTimeLoadSourceDetail')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Merge SP_OneTimeLoadSourceDetail",
						"type": "SqlPoolStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"sqlPool": {
							"referenceName": "athkwbathfittersqlpool",
							"type": "SqlPoolReference"
						},
						"typeProperties": {
							"storedProcedureName": "[dbo].[SP_OneTimeLoadSourceDetail]"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-18T04:53:50Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PPL_master')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Data from Source to Raw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_GetDataFromSourceToRaw_CRM_Daily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get Data from Raw to Landing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Data from Source to Raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_GetDataFromRawToLanding_CRM_Daily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Get Data from Ext to Lkp",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Data from Raw to Landing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_GetDataFromExtToLkp_CRM_Daily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimCampaign",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Data from Ext to Lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedDimCampaign",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimLocation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimCampaign",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedDimLocation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimEmployee",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimLocation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedDimEmployee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimMarketSegment",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedDimMarketSegment",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DimLeadStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimMarketSegment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedDimLeadStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load FactLead",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load DimLeadStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PPL_LoadCuratedFactLead",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PPL_GetDataFromSourceToRaw_CRM_Daily')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_GetDataFromRawToLanding_CRM_Daily')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_GetDataFromExtToLkp_CRM_Daily')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedDimCampaign')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedDimLocation')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedDimEmployee')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedDimMarketSegment')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedDimLeadStatus')]",
				"[concat(variables('workspaceId'), '/pipelines/PPL_LoadCuratedFactLead')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_DataLake_AtLocation_Binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ath-kw-bathfitter-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileLocation": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FileLocation",
							"type": "Expression"
						},
						"fileSystem": "synapse"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ath-kw-bathfitter-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_DataLake_DeleteFiles')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ath-kw-bathfitter-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": "synapse"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ath-kw-bathfitter-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_DataLake_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ath-kw-bathfitter-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ath-kw-bathfitter-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_SQLSERVER_CRM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "athkwbathfittersqlserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/athkwbathfittersqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_SynapsePool')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {},
				"sqlPool": {
					"referenceName": "athkwbathfittersqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/athkwbathfittersqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ath-kw-bathfitter-workspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ath-kw-bathfitter-workspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ath-kw-bathfitter-workspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ath-kw-bathfitter-workspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/athkwbathfitterkv')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('athkwbathfitterkv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/athkwbathfittersqlserver')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "athkwbathfitterkv",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('athkwbathfittersqlserver_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/athkwbathfitterkv')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select * from JobConfig.SourceDetail\n\nselect * from JobConfig.JobLastRun\nselect * from JobConfig.JobRunHistory\n\nselect * from Lkp.Filteredbfr_bfusetup\nselect * from Lkp.Filteredbfr_managementdistrict\nselect * from Lkp.FilteredBusinessUnit\nselect * from Lkp.FilteredCampaign\nselect * from Lkp.FilteredOpportunity\nselect * from Lkp.FilteredSystemUser\n\nselect * from Int.DimCampaign\nselect * from Int.DimCampaignReject\nselect * from Curated.DimCampaign\nselect * from Int.DimLocation\nselect * from Int.DimLocationReject\nselect * from Curated.DimLocation\nselect * from Int.DimEmployee\nselect * from Int.DimEmployeeReject\nselect * from Curated.DimEmployee\nselect * from Int.DimLeadStatus\nselect * from Int.DimLeadStatusReject\nselect * from Curated.DimLeadStatus\nselect * from Int.DimMarketSegment\nselect * from Int.DimMarketSegmentReject\nselect * from Curated.DimMarketSegment\nselect * from Int.FactLead\nselect * from Int.FactLeadReject\nselect * from Int.FactLeadDeleted\nselect * from Curated.FactLead",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "athkwbathfittersqlpool",
						"poolName": "athkwbathfittersqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [Curated].[DimProvider] (\n\t[ProviderSK]             INT   NULL,\n    [ProviderSourceId]             INT          NULL,\n    [dwEffectiveFrom]          DATETIME         NULL,\n    [dwEffectiveTo]            DATETIME         NULL,\n    [dwActiveRec]              BIT              NULL,\n    [dwCreateDate]             DATETIME         NULL,\n    [dwUpdateDate]             DATETIME         NULL,\n    [dwType1Hash]              VARBINARY (8000) NULL,\n    [dwType2Hash]              VARBINARY (8000) NULL\n)\nWITH (CLUSTERED COLUMNSTORE INDEX, DISTRIBUTION = ROUND_ROBIN);\n\nCREATE TABLE [Curated].[FactLead] (\n    [LeadSK]          INT              IDENTITY (1, 1) NOT NULL,\n    [LeadBK]          VARCHAR (100)    NULL,\n    [LeadSourceID]    VARCHAR (100)    NULL,\n    [CampaignSK]      INT              NULL,\n    [MarketSegmentSK] INT              NULL,\n    [StatusSK]        INT              NULL,\n    [Rehash]          BIT              NULL,\n    [LeadDateSK]      INT              NULL,\n    [LocationSK]      INT              NULL,\n    [BookerSK]        INT              NULL,\n    [ProviderSK]      INT              NULL,\n    [LeadDate]        DATETIME         NULL,\n    [dwEffectiveFrom] DATETIME         NULL,\n    [dwEffectiveTo]   DATETIME         NULL,\n    [dwActiveRec]     BIT              NULL,\n    [dwCreateDate]    DATETIME         NULL,\n    [dwUpdateDate]    DATETIME         NULL,\n    [dwType1Hash]     VARBINARY (8000) NULL,\n    [dwType2Hash]     VARBINARY (8000) NULL\n)\nWITH (CLUSTERED COLUMNSTORE INDEX, DISTRIBUTION = HASH([LeadBK]));\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "athkwbathfittersqlpool",
						"poolName": "athkwbathfittersqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/athkwbathfittersqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}